package algorithme;

public class RC4 {
	
	public void RC4encryption(String text, String encryptedKey)
	{
			int[] sbox = new int[256];
		 	int[] key = new int[256];
		    int temp =0;
		    int a =0;
		    int i =0;
		    int j =0;
		    //Dim k As Integer
		    //Dim cipherby As Integer
		    //Dim cipher As String

		    
		    RC4Init(encryptedKey, key, sbox);
		    
		    for( a = 1; a <= text.length();a++)
		    {
		        i = i + 1 % 256;
		        j = (j + sbox[i]) % 256;
		        temp = sbox[i];
		        sbox[i] = sbox[j];
		        sbox[j] = temp;

		        k = sbox((sbox(i) + sbox(j)) Mod 256)

		        cipherby = (Asc(Mid$(text, a, 1))) Xor k
		        If Len(Hex(cipherby)) = 1 Then
		            cipher = cipher & "0" & Hex(cipherby)
		        Else
		            cipher = cipher & Hex(cipherby)
		        End If
		    }

		    RC4Encrypt = cipher
	  
	}
	
	public void RC4Init(String text, int[] key, int[] sbox)
	{	
		int[] S = new int[255];
		int[] T = new int [255];
		int j = 0;	
		int i = 0;
		int[] Key = new int[1234];
		
	//Initialisation du vecteur état S
	  for (int cpt= 0 ; cpt < 255 ; cpt++)
	  {
		  S[cpt] = cpt;
		  T[cpt] = Key[cpt % Key.length] ;
	  }
	  
	  //Permuttion initiale de S 
	  
	 
	  for(int cpt = 0 ; cpt < 255 ; cpt++)
	  {
		  j = (j + S[cpt] + T[cpt]) % 256;
		  Swap(S[cpt],S[j]);
	  }
	}
	
	private void Swap(int a , int b)
	{
		int temp = a ;
		a = b;			
		b = temp;
		
		
	}
	
}
