package algorithme;

public class RC4 {
	
	public String RC4encryption(String text, String encryptedKey)
	{
			int[] sbox = new int[256];
		 	int[] key = new int[256];
		    int temp =0;
		    int a =0;
		    int i =0;
		    int j =0;
		    int k =0;
		    int cipherby =0;
		    String cipher = "";

		    
		    RC4Init(encryptedKey, key, sbox);
		    
		    for( a = 1; a <= text.length();a++)
		    {
		        i = i + 1 % 256;
		        j = (j + sbox[i]) % 256;
		        temp = sbox[i];
		        sbox[i] = sbox[j];
		        sbox[j] = temp;
		        k = sbox[(sbox[i] + sbox[j]) % 256];

		        
		        cipherby = (Character.getNumericValue(text.charAt(a))) ^ k;
		        if (cipherby == 1) 
		        {
		            cipher = cipher + "0" + Integer.toHexString(cipherby);
		        }
		        else{
		            cipher = cipher + Integer.toHexString(cipherby);
		        }
		    }

		    return cipher;
	  
	}
	
	public void RC4Init(String text, int[] key, int[] sbox)
	{	
		int[] S = new int[255];
		int[] T = new int [255];
		int j = 0;	
		int i = 0;
		int[] Key = new int[1234];
		
	//Initialisation du vecteur état S
	  for (int cpt= 0 ; cpt < 255 ; cpt++)
	  {
		  S[cpt] = cpt;
		  T[cpt] = Key[cpt % Key.length] ;
	  }
	  
	  //Permuttion initiale de S 
	  
	 
	  for(int cpt = 0 ; cpt < 255 ; cpt++)
	  {
		  j = (j + S[cpt] + T[cpt]) % 256;
		  Swap(S[cpt],S[j]);
	  }
	}
	
	private void Swap(int a , int b)
	{
		int temp = a ;
		a = b;			
		b = temp;
		
		
	}
	
}
